(()=>{"use strict";var e={88:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.CommonUtils=void 0;const n=r(982),s=r(100);t.CommonUtils=class{static genUlid(e){return e.toUpperCase()+"-"+(0,s.ulid)()+(0,n.randomBytes)(4).toString("hex").toUpperCase()}}},100:e=>{e.exports=require("ulid")},124:e=>{e.exports=require("winston")},143:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.ReqSchema=void 0;const n=r(569);t.ReqSchema=n.z.object({email:n.z.string().email({message:"Invalid email address"}).min(1,{message:"'email' field is required"}),name:n.z.string().min(2,{message:"Invalid name"}),date_of_birth:n.z.string().regex(/^\d{4}-\d{2}-\d{2}$/,{message:"Invalid date format. Use YYYY-MM-DD"})})},200:e=>{e.exports=require("inversify-express-utils")},218:function(e,t,r){var n=this&&this.__decorate||function(e,t,r,n){var s,o=arguments.length,i=o<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,r):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,n);else for(var a=e.length-1;a>=0;a--)(s=e[a])&&(i=(o<3?s(i):o>3?s(t,r,i):s(t,r))||i);return o>3&&i&&Object.defineProperty(t,r,i),i},s=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},o=this&&this.__param||function(e,t){return function(r,n){t(r,n,e)}},i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.ResponseHandler=void 0;const a=r(337),d=i(r(825)),c=r(835);let u=class{logger;constructor(e){this.logger=e}validate(e,t){try{return e.schema.parse(e.payload)}catch(e){throw this.logger.info({},{description:"Payload Validation Error",trace_id:t,ref:"ResponseHandler:IResponseHandler"}),e}}success(e,t){console.log("Success----\x3e",e?.responseData,t),this.logger.info({},{description:"Request Success----\x3e",trace_id:t,ref:"ResponseHandler:IResponseHandler"}),e.response.status(e?.statusCode??200).json(e?.responseData??{})}failure(e,t){console.log("Failure----\x3e",JSON.stringify(e.error),t??"No Trace ID"),this.logger.info({},{description:"Request Failed----\x3e",trace_id:t,ref:"ResponseHandler:IResponseHandler"});const{error:r,statusCode:n,response:s}=e,o=d.default.omit(r??{},["statusCode"]),i=r?.statusCode??n??500;s.status(i).json({error:d.default.isEmpty(o)?{message:"Internal Server Error"}:o})}};t.ResponseHandler=u,t.ResponseHandler=u=n([(0,a.injectable)(),o(0,(0,a.inject)(c.TYPES.Logger)),s("design:paramtypes",[Object])],u)},252:function(e,t,r){var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),r(321);const s=n(r(871)),o=r(200),i=n(r(577)),a=n(r(525));r(713);const d=r(409),c=new o.InversifyExpressServer(d.container);c.setConfig((e=>{e.use((0,i.default)()),e.use((0,a.default)()),e.use(s.default.json())}));const u=c.build();t.default=u},263:function(e,t,r){var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const s=r(449);n(r(818)).default.config();const o=new s.Pool({host:process.env.DB_HOST,port:parseInt(process.env.DB_PORT||"5432"),user:process.env.DB_USER,password:process.env.DB_PASSWORD,database:process.env.DB_NAME});t.default=o},275:e=>{e.exports=require("pg-format")},307:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.ServiceException=void 0;class r extends Error{message;trace_id;additionalInfo;payload;statusCode;constructor({message:e,additionalInfo:t,payload:r,trace_id:n,statusCode:s}){super(e??"unknown error exception"),this.message=e,this.trace_id=n,this.statusCode=s??500,this.name="ServiceException",this.payload=r,this.additionalInfo=t,Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor)}}t.ServiceException=r},321:e=>{e.exports=require("reflect-metadata")},337:e=>{e.exports=require("inversify")},409:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.container=void 0;const n=r(337),s=r(498),o=r(835),i=r(779),a=r(713),d=r(218),c=r(747),u=new n.Container;t.container=u,u.bind(o.TYPES.StudentController).to(a.StudentController).inSingletonScope(),u.bind(o.TYPES.StudentService).to(i.StudentService).inSingletonScope(),u.bind(o.TYPES.StudentRepository).to(s.StudentRepository).inSingletonScope(),u.bind(o.TYPES.ResponseHandler).to(d.ResponseHandler).inSingletonScope(),u.bind(o.TYPES.Logger).to(c.Logger).inSingletonScope()},449:e=>{e.exports=require("pg")},498:function(e,t,r){var n=this&&this.__decorate||function(e,t,r,n){var s,o=arguments.length,i=o<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,r):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,n);else for(var a=e.length-1;a>=0;a--)(s=e[a])&&(i=(o<3?s(i):o>3?s(t,r,i):s(t,r))||i);return o>3&&i&&Object.defineProperty(t,r,i),i},s=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},o=this&&this.__param||function(e,t){return function(r,n){t(r,n,e)}},i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.StudentRepository=void 0;const a=r(337),d=i(r(275)),c=i(r(263)),u=r(835),l=r(307);let p=class{logger;constructor(e){this.logger=e}async create(e,t){try{const{name:r,email:n,date_of_birth:s}=e;this.logger.info(e,{description:"Creating new student",trace_id:t,ref:"StudentRepository:create"});const o=await c.default.query("INSERT INTO students (name, email, date_of_birth) VALUES ($1, $2, $3) RETURNING *",[r,n,s]);return this.logger.info(o.rows[0],{description:"Student created successfully",trace_id:t,ref:"StudentRepository:create"}),o.rows[0]}catch(e){throw this.logger.error(e,{description:"Error creating student",trace_id:t,ref:"StudentRepository:create"}),new Error("23505"===e.code?"Email already exists. Please use a different email.":"Failed to create student. Please try again.")}}async createStudents(e,t){try{this.logger.info(e,{description:"Creating students in bulk",trace_id:t,ref:"StudentRepository:createStudents"});const r=e.map((({name:e,email:t,date_of_birth:r})=>[e,t,r])),n=(0,d.default)("INSERT INTO students (name, email, date_of_birth) VALUES %L RETURNING *",r),s=await c.default.query(n);return this.logger.info(s.rows,{description:"Students created successfully",trace_id:t,ref:"StudentRepository:create"}),s.rows}catch(e){throw this.logger.error(e,{description:"Error creating students",trace_id:t,ref:"StudentRepository:create"}),new l.ServiceException({message:"23505"===e.code?"Duplicate email detected. Please use unique emails.":"Failed to create students. Please try again.",statusCode:400,trace_id:t})}}async findAll(e,t,r,n){try{this.logger.info({page:e,limit:t,search:r},{description:"Fetching students",trace_id:n,ref:"StudentRepository:findAll"});const s=Number(e),o=Number(t);if(isNaN(s)||isNaN(o))throw new l.ServiceException({message:"Page and limit must be valid numbers.",statusCode:422,trace_id:n});const i=(s-1)*o;let a="";const d=[];r&&(a=" WHERE LOWER(name) LIKE $1 OR LOWER(email) LIKE $1",d.push(`%${r.toLowerCase()}%`));const u=`SELECT * FROM students${a} ORDER BY id LIMIT $${d.length+1} OFFSET $${d.length+2}`;d.push(o,i);const p=`SELECT COUNT(*) FROM students${a}`,f=r?[d[0]]:[],g=await c.default.query(u,d),h=await c.default.query(p,f),S=parseInt(h.rows[0].count,10);return{students:g.rows,totalCount:S}}catch(e){throw this.logger.error(e,{description:"Error fetching students",trace_id:n,ref:"StudentRepository:findAll"}),new Error("Failed to retrieve students.")}}async findById(e,t){try{return this.logger.info({id:e},{description:"Fetching student by ID",trace_id:t,ref:"StudentRepository:findById"}),(await c.default.query("SELECT * FROM students WHERE id = $1",[e])).rows[0]||null}catch(r){throw this.logger.error(r,{description:`Error fetching student with id ${e}`,trace_id:t,ref:"StudentRepository:findById"}),new Error("Failed to retrieve student.")}}async update(e,t,r){try{this.logger.info({id:e,student:t},{description:"Updating student details",trace_id:r,ref:"StudentRepository:update"});const{name:n,email:s,date_of_birth:o}=t;return(await c.default.query("UPDATE students SET name = $1, email = $2, date_of_birth = $3 WHERE id = $4 RETURNING *",[n,s,o,e])).rows[0]||null}catch(t){throw this.logger.error(t,{description:`Error updating student with id ${e}`,trace_id:r,ref:"StudentRepository:update"}),new Error("Failed to update student.")}}async delete(e,t){try{this.logger.info({id:e},{description:"Deleting student",trace_id:t,ref:"StudentRepository:delete"}),await c.default.query("DELETE FROM students WHERE id = $1",[e]),this.logger.info({id:e},{description:"Student deleted successfully",trace_id:t,ref:"StudentRepository:delete"})}catch(r){throw this.logger.error(r,{description:`Error deleting student with id ${e}`,trace_id:t,ref:"StudentRepository:delete"}),new Error("Failed to delete student.")}}};t.StudentRepository=p,t.StudentRepository=p=n([(0,a.injectable)(),o(0,(0,a.inject)(u.TYPES.Logger)),s("design:paramtypes",[Object])],p)},525:e=>{e.exports=require("helmet")},569:e=>{e.exports=require("zod")},577:e=>{e.exports=require("cors")},713:function(e,t,r){var n=this&&this.__decorate||function(e,t,r,n){var s,o=arguments.length,i=o<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,r):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,n);else for(var a=e.length-1;a>=0;a--)(s=e[a])&&(i=(o<3?s(i):o>3?s(t,r,i):s(t,r))||i);return o>3&&i&&Object.defineProperty(t,r,i),i},s=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},o=this&&this.__param||function(e,t){return function(r,n){t(r,n,e)}};Object.defineProperty(t,"__esModule",{value:!0}),t.StudentController=void 0;const i=r(200),a=r(337),d=r(835),c=r(307),u=r(143),l=r(88);let p=class{studentService;responseHandler;logger;constructor(e,t,r){this.studentService=e,this.responseHandler=t,this.logger=r}async getAllStudents(e,t,r,n,s){const o=n.headers?.["X-App-Trace-Id"]??l.CommonUtils.genUlid("trx"),i=e||1,a=t||10;try{if(this.logger.info({},{description:"Fetching students",trace_id:o,ref:"StudentController:getAllStudents"}),i<1||a<1)throw new c.ServiceException({message:"Page and limit must be positive integers",trace_id:o,statusCode:404});const{students:e,totalCount:t}=await this.studentService.getAllStudents(i,a,r,o),n=Math.ceil(t/a);this.logger.info({students:e,totalCount:t,totalPages:n},{description:"Students fetched successfully",trace_id:o,ref:"StudentController:getAllStudents"});const d={pagination:{totalCount:t,currentPage:i,totalPages:n,limit:a},students:e};this.responseHandler.success({responseData:d,statusCode:200,response:s})}catch(e){this.logger.error(e,{description:"Error fetching students",trace_id:o,ref:"StudentController:getAllStudents"}),this.responseHandler.failure({response:s,error:e})}}async getStudentById(e,t,r){const n=t.headers?.["X-App-Trace-Id"]??l.CommonUtils.genUlid("trx");this.logger.info({id:e},{description:"Fetching student by ID",trace_id:n,ref:"StudentController:getStudentById"});try{const t=await this.studentService.getStudentById(e,n);if(!t)throw new c.ServiceException({message:"Student not found",trace_id:n,statusCode:404});this.responseHandler.success({responseData:t,statusCode:200,response:r})}catch(e){this.logger.error(e,{description:"Error fetching student by ID",trace_id:n,ref:"StudentController:getStudentById"}),this.responseHandler.failure({response:r,error:e})}}async createStudent(e,t,r){const n=t.headers?.["X-App-Trace-Id"]??l.CommonUtils.genUlid("trx");this.logger.info(e,{description:"Creating new student",trace_id:n,ref:"StudentController:createStudent"});try{const t={...e,date_of_birth:e.date_of_birth instanceof Date?e.date_of_birth.toISOString().split("T")[0]:e.date_of_birth};this.responseHandler.validate({schema:u.ReqSchema,payload:t},n);const s=await this.studentService.createStudent(e,n);this.logger.info(s,{description:"Student created successfully",trace_id:n,ref:"StudentController:createStudent"}),this.responseHandler.success({responseData:s,statusCode:201,response:r})}catch(e){this.logger.error(e,{description:"Error creating student",trace_id:n,ref:"StudentController:createStudent"}),this.responseHandler.failure({response:r,error:e})}}async createBulkStudents(e,t,r){const n=t.headers?.["X-App-Trace-Id"]??l.CommonUtils.genUlid("POC");this.logger.info(e,{description:"Creating new students",trace_id:n,ref:"StudentController:createStudents"});try{if(!Array.isArray(e)||0===e.length)throw new Error("Invalid input. Expected an array of students.");const t=e.map((e=>({...e,date_of_birth:e.date_of_birth instanceof Date?e.date_of_birth.toISOString().split("T")[0]:e.date_of_birth})));t.forEach((e=>{this.responseHandler.validate({schema:u.ReqSchema,payload:e},n)}));const s=await this.studentService.createBulkStudents(t,n);this.logger.info(s,{description:"Students created successfully",trace_id:n,ref:"StudentController:createStudents"}),this.responseHandler.success({responseData:s,statusCode:201,response:r})}catch(e){this.logger.error(e,{description:"Error creating students",trace_id:n,ref:"StudentController:createStudents"}),this.responseHandler.failure({response:r,error:e})}}async updateStudent(e,t,r,n){const s=r.headers?.["X-App-Trace-Id"]??l.CommonUtils.genUlid("trx");this.logger.info({id:e,student:t},{description:"Updating student details",trace_id:s,ref:"StudentController:updateStudent"});try{const r={...t,date_of_birth:t.date_of_birth instanceof Date?t.date_of_birth.toISOString().split("T")[0]:t.date_of_birth};this.responseHandler.validate({schema:u.ReqSchema,payload:r},s);const o=await this.studentService.updateStudent(e,t,s);if(!o)throw new c.ServiceException({message:"Student not found",trace_id:s,statusCode:404});this.logger.info(o,{description:"Student updated successfully",trace_id:s,ref:"StudentController:updateStudent"}),this.responseHandler.success({responseData:o,statusCode:200,response:n})}catch(e){this.logger.error(e,{description:"Error updating student",trace_id:s,ref:"StudentController:updateStudent"}),this.responseHandler.failure({response:n,error:e})}}async deleteStudent(e,t,r){const n=t.headers?.["X-App-Trace-Id"]??l.CommonUtils.genUlid("trx");this.logger.info({id:e},{description:"Deleting student",trace_id:n,ref:"StudentController:deleteStudent"});try{await this.studentService.deleteStudent(e,n),this.logger.info({id:e},{description:"Student deleted successfully",trace_id:n,ref:"StudentController:deleteStudent"}),this.responseHandler.success({responseData:null,statusCode:204,response:r})}catch(e){this.logger.error(e,{description:"Error deleting student",trace_id:n,ref:"StudentController:deleteStudent"}),this.responseHandler.failure({response:r,error:e})}}};t.StudentController=p,n([(0,i.httpGet)("/"),o(0,(0,i.queryParam)("page")),o(1,(0,i.queryParam)("limit")),o(2,(0,i.queryParam)("search")),s("design:type",Function),s("design:paramtypes",[Number,Number,String,Object,Object]),s("design:returntype",Promise)],p.prototype,"getAllStudents",null),n([(0,i.httpGet)("/:id"),o(0,(0,i.requestParam)("id")),s("design:type",Function),s("design:paramtypes",[String,Object,Object]),s("design:returntype",Promise)],p.prototype,"getStudentById",null),n([(0,i.httpPost)("/"),o(0,(0,i.requestBody)()),s("design:type",Function),s("design:paramtypes",[Object,Object,Object]),s("design:returntype",Promise)],p.prototype,"createStudent",null),n([(0,i.httpPost)("/bulk-records"),o(0,(0,i.requestBody)()),s("design:type",Function),s("design:paramtypes",[Array,Object,Object]),s("design:returntype",Promise)],p.prototype,"createBulkStudents",null),n([(0,i.httpPut)("/:id"),o(0,(0,i.requestParam)("id")),o(1,(0,i.requestBody)()),s("design:type",Function),s("design:paramtypes",[String,Object,Object,Object]),s("design:returntype",Promise)],p.prototype,"updateStudent",null),n([(0,i.httpDelete)("/:id"),o(0,(0,i.requestParam)("id")),s("design:type",Function),s("design:paramtypes",[String,Object,Object]),s("design:returntype",Promise)],p.prototype,"deleteStudent",null),t.StudentController=p=n([(0,i.controller)("/api/students"),o(0,(0,a.inject)(d.TYPES.StudentService)),o(1,(0,a.inject)(d.TYPES.ResponseHandler)),o(2,(0,a.inject)(d.TYPES.Logger)),s("design:paramtypes",[Object,Object,Object])],p)},747:function(e,t,r){var n=this&&this.__decorate||function(e,t,r,n){var s,o=arguments.length,i=o<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,r):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,n);else for(var a=e.length-1;a>=0;a--)(s=e[a])&&(i=(o<3?s(i):o>3?s(t,r,i):s(t,r))||i);return o>3&&i&&Object.defineProperty(t,r,i),i},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.Logger=void 0;const o=s(r(124)),i=r(337);let a=class{logger=o.default.createLogger({level:"info",format:o.default.format.combine(o.default.format.timestamp(),o.default.format.printf((({timestamp:e,level:t,message:r,metadata:n})=>`${e} ${t.toUpperCase()}: ${n?JSON.stringify(n):""}`))),transports:[new o.default.transports.Console,new o.default.transports.File({filename:"app.log"})]});log(e,t,r){const n={message:r?.description||"Log message",payload:t,trace_id:r?.trace_id,ref:r?.ref};this.logger.log(e,n.message,{metadata:n})}info(e,t){this.log("info",e,t)}error(e,t){this.log("error",e,t)}debug(e,t){this.log("debug",e,t)}warn(e,t){this.log("warn",e,t)}};t.Logger=a,t.Logger=a=n([(0,i.injectable)()],a)},779:function(e,t,r){var n=this&&this.__decorate||function(e,t,r,n){var s,o=arguments.length,i=o<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,r):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,n);else for(var a=e.length-1;a>=0;a--)(s=e[a])&&(i=(o<3?s(i):o>3?s(t,r,i):s(t,r))||i);return o>3&&i&&Object.defineProperty(t,r,i),i},s=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},o=this&&this.__param||function(e,t){return function(r,n){t(r,n,e)}};Object.defineProperty(t,"__esModule",{value:!0}),t.StudentService=void 0;const i=r(337),a=r(498),d=r(835);let c=class{studentRepository;constructor(e){this.studentRepository=e}async createStudent(e,t){return this.studentRepository.create(e,t)}createBulkStudents(e,t){return this.studentRepository.createStudents(e,t)}async getAllStudents(e,t,r,n){return this.studentRepository.findAll(e,t,r,n)}async getStudentById(e,t){return this.studentRepository.findById(e,t)}async updateStudent(e,t,r){return this.studentRepository.update(e,t,r)}async deleteStudent(e,t){return this.studentRepository.delete(e,t)}};t.StudentService=c,t.StudentService=c=n([(0,i.injectable)(),o(0,(0,i.inject)(d.TYPES.StudentRepository)),s("design:paramtypes",[a.StudentRepository])],c)},818:e=>{e.exports=require("dotenv")},825:e=>{e.exports=require("lodash")},835:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.TYPES=void 0;const r={StudentService:Symbol.for("StudentService"),StudentRepository:Symbol.for("StudentRepository"),StudentController:Symbol.for("StudentController"),ResponseHandler:Symbol.for("ResponseHandler"),Logger:Symbol.for("Logger")};t.TYPES=r},871:e=>{e.exports=require("express")},982:e=>{e.exports=require("crypto")},997:function(e,t,r){var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const s=n(r(252)),o=process.env.PORT||5e3;s.default.listen(o,(()=>{console.log(`Server is running on http://localhost:${o}`)}))}},t={};!function r(n){var s=t[n];if(void 0!==s)return s.exports;var o=t[n]={exports:{}};return e[n].call(o.exports,o,o.exports,r),o.exports}(997)})();